{
  "compilerOptions": {
    /* Language and Environment */
    "target": "es2016",                          /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "jsx": "preserve",                           /* Specify what JSX code is generated. */

    /* Modules */
    "module": "node16",                          /* Specify what module code is generated. */
    "moduleResolution": "node16",                /* Specify how TypeScript looks up a file from a given module specifier. */
    "resolveJsonModule": true,                   /* Enable importing .json files. */
    "allowArbitraryExtensions": true,            /* Enable importing files with any extension, provided a declaration file is present. */

    /* JavaScript Support */
    "allowJs": true,                             /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */
    "checkJs": true,                             /* Enable error reporting in type-checked JavaScript files. */

    /* Emit */
    "noEmit": true,                              /* Disable emitting files from a compilation. */
    "preserveConstEnums": true,               	 /* Disable erasing 'const enum' declarations in generated code. */

		/* Interop Constraints */
    "isolatedModules": true,                     /* Ensure that each file can be safely transpiled without relying on other imports. */
    "allowSyntheticDefaultImports": true,        /* Allow 'import x from y' when a module doesn't have a default export. */
    "esModuleInterop": true,                     /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,    /* Ensure that casing is correct in imports. */

    /* Type Checking */
    "strict": true,                              /* Enable all strict type-checking options. */
    "noImplicitAny": true,                       /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "noImplicitThis": true,                      /* Enable error reporting when 'this' is given the type 'any'. */
    "useUnknownInCatchVariables": true,          /* Default catch clause variables as 'unknown' instead of 'any'. */
    "alwaysStrict": true,                        /* Ensure 'use strict' is always emitted. */
    "noUnusedLocals": true,                      /* Enable error reporting when local variables aren't read. */
    "noUnusedParameters": true,                  /* Raise an error when a function parameter isn't read. */
    "exactOptionalPropertyTypes": true,          /* Interpret optional property types as written, rather than adding 'undefined'. */
    "noFallthroughCasesInSwitch": true,          /* Enable error reporting for fallthrough cases in switch statements. */
    "noImplicitOverride": true,                  /* Ensure overriding members in derived classes are marked with an override modifier. */

    /* Completeness */
    "skipLibCheck": false                        /* Skip type checking all .d.ts files. */
  },
	"include": [
		"src",
	]
}
